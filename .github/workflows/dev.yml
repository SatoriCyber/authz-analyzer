# This is a basic workflow to help you get started with Actions.

name: dev workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: [3.8, 3.9, "3.10"]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
      - name: test with tox
        run: tox -v

      - name: list files
        run: ls -l .
      - name: Cache test Results
        uses: actions/cache@v2
        with:
          path: .test_results
          key: ${{ runner.os }}-test-results-${{ hashFiles('**/test_*.py') }}
          restore-keys: |
            ${{ runner.os }}-test-results-
  publish_test_results:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Restore from Cache
        uses: actions/cache@v2
        with:
          path: .test_results
          key: ${{ runner.os }}-test-results-${{ hashFiles('**/test_*.py') }}
          restore-keys: |
            ${{ runner.os }}-test-results-
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            .test_results/*.xml
  code_coverage:
    strategy:
      matrix:
        python-versions: [3.8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
      - name: test with tox
        run: tox -v
      - name: Code Coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          files: coverage.xml
