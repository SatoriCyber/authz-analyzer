[tool]
[tool.poetry]
name = "authz-analyzer"
version = "2.5.0"
homepage = "https://github.com/satoricyber/authz-analyzer"
description = "Analyze DB authorization."
authors = ["SatoriCyber"]
readme = "README.md"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "authz_analyzer" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8.0,<4.0"
click = "8.1.3"
snowflake-connector-python = "=2.7.9"
google-cloud-bigquery = ">=2.1.0,<3.0"
google-cloud-resource-manager = ">=1.6.3,<2.0"
google-api-python-client = "^2.66.0"
boto3 = "^1.26.27"
pydantic = "^1.10.2"
networkx = "^2.8.8"
pyserde = "^0.9.6"

black  = { version = "^21.5b2", optional = true}
isort  = { version = "^5.8.0", optional = true}
flake8  = { version = "^3.9.2", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = {version = "^0.900", optional = true}
pytest  = { version = "^6.2.4", optional = true}
pytest-cov  = { version = "^2.12.0", optional = true}
tox  = { version = "^3.20.1", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^22.3.1", optional = true}
google-api-python-client-stubs = { version="^1.13.0", optional=true}

# Disable docs for now, need to figure it out
# mkdocs  = { version = "^1.4.2", optional = true}
# mkdocs-include-markdown-plugin  = { version = "^3.9.1", optional = true}
# mkdocs-material  = { version = "^8.2.8", optional = true}
# mkdocs-material-extensions  = { version = "^1.1.0", optional = true}
# mkdocs-autorefs = {version = "^0.4.1", optional = true}
twine  = { version = "^3.3.0", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
jinja2={ version="^2.11.3", optional = true}
markupsafe= {version="=2.0.1", optional = true}
psycopg2 = "^2.9.5"
psycopg2-binary = "^2.9.5"
google-cloud-iam = "^2.10.0"



[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "google-api-python-client-stubs"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

# Disable docs for now, need to figure it out
# doc = [
#     "mkdocs",
#     "mkdocs-include-markdown-plugin",
#     "mkdocs-material",
#     "mkdocs-material-extension",
#     "mkdocs-autorefs",
#     "jinja2",
#     "markupsafe"
#     ]

[tool.poetry.scripts]
authz-analyzer = 'authz_analyzer.cli:main'

[tool.poetry.group.dev.dependencies]
types-psycopg2 = "^2.9.21.2"
google-api-python-client-stubs = "^1.13.0"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
